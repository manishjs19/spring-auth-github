# Server Configuration
server.port=8085
server.servlet.context-path=/

# Database Configuration (H2 for development)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# H2 Console (for development only)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO
logging.level.com.example.springsecurityoauth2rest=DEBUG

# OAuth2 Configuration (example for Google)
# You need to register your application with OAuth2 providers and get client credentials
#spring.security.oauth2.client.registration.google.client-id=your-google-client-id
#spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
#spring.security.oauth2.client.registration.google.scope=profile,email

# GitHub Token Authentication Configuration
# Users need to provide GitHub Personal Access Tokens in Authorization header
# No OAuth2 client configuration needed for token-based auth

# ================================================================================
# NOTE: This implementation uses GitHub Personal Access Tokens (NOT OAuth2)
# ================================================================================
# 
# What we implemented:
# - Direct GitHub API token validation
# - No OAuth2 authorization code flow
# - No client registration required
# - Pure API-based authentication
#
# If you want true OAuth2 with GitHub, you would uncomment and configure:
# spring.security.oauth2.client.registration.github.client-id=your-github-oauth-app-client-id
# spring.security.oauth2.client.registration.github.client-secret=your-github-oauth-app-client-secret
# spring.security.oauth2.client.registration.github.scope=read:user,user:email
# spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize  
# spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
# spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
